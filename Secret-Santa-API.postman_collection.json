{
  "info": {
    "name": "Secret Santa API",
    "description": "Complete API collection for Secret Santa application testing",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "10xdev-project"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/reset-password",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "reset-password"]
            }
          }
        },
        {
          "name": "Logout User",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Groups Management",
      "item": [
        {
          "name": "Create Group",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Secret Santa 2025\",\n  \"budget\": 100,\n  \"end_date\": \"2025-12-25T23:59:59Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/groups",
              "host": ["{{base_url}}"],
              "path": ["api", "groups"]
            },
            "description": "Create a new Secret Santa group. Save the returned 'id' as GROUP_ID variable."
          }
        },
        {
          "name": "List Groups",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/groups?filter=all&page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["api", "groups"],
              "query": [
                {
                  "key": "filter",
                  "value": "all",
                  "description": "Filter groups: created, joined, all"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Items per page (1-100)"
                }
              ]
            }
          }
        },
        {
          "name": "Get Group Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/groups/{{group_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "groups", "{{group_id}}"]
            }
          }
        },
        {
          "name": "Update Group",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Secret Santa 2025\",\n  \"budget\": 150,\n  \"end_date\": \"2025-12-31T23:59:59Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/groups/{{group_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "groups", "{{group_id}}"]
            }
          }
        },
        {
          "name": "Delete Group",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/groups/{{group_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "groups", "{{group_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Participants Management",
      "item": [
        {
          "name": "List Group Participants",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/groups/{{group_id}}/participants",
              "host": ["{{base_url}}"],
              "path": ["api", "groups", "{{group_id}}", "participants"]
            }
          }
        },
        {
          "name": "Add Participant",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jan Kowalski\",\n  \"email\": \"jan@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/groups/{{group_id}}/participants",
              "host": ["{{base_url}}"],
              "path": ["api", "groups", "{{group_id}}", "participants"]
            },
            "description": "Add a participant to the group. Save the returned participant 'id' as PARTICIPANT_ID variable."
          }
        },
        {
          "name": "Update Participant",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jan Nowak\",\n  \"email\": \"jan.nowak@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/participants/{{participant_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "participants", "{{participant_id}}"]
            }
          }
        },
        {
          "name": "Delete Participant",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/participants/{{participant_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "participants", "{{participant_id}}"]
            }
          }
        },
        {
          "name": "Update Participant Wishlist (Registered User)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"wishlist\": \"I want a book about astronomy, some chocolates, and a nice scarf. Also check out this link: https://example.com/my-wishlist\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/participants/{{participant_id}}/wishlist",
              "host": ["{{base_url}}"],
              "path": ["api", "participants", "{{participant_id}}", "wishlist"]
            },
            "description": "Update wishlist for a registered user using Bearer token authentication. Only the participant owner can update their wishlist, and only before the group end date."
          }
        },
        {
          "name": "Update Participant Wishlist (Unregistered User)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"wishlist\": \"I would love to receive a gaming console, some board games, and maybe some gourmet coffee. Check my Amazon wishlist: https://www.amazon.com/hz/wishlist/ls/ABC123DEF456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/participants/{{participant_id}}/wishlist?token={{participant_token}}",
              "host": ["{{base_url}}"],
              "path": ["api", "participants", "{{participant_id}}", "wishlist"],
              "query": [
                {
                  "key": "token",
                  "value": "{{participant_token}}"
                }
              ]
            },
            "description": "Update wishlist for an unregistered user using participant token in query parameter. The participant token is provided when the participant was added to the group."
          }
        },
        {
          "name": "Get Participant Wishlist (Registered User)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/participants/{{participant_id}}/wishlist",
              "host": ["{{base_url}}"],
              "path": ["api", "participants", "{{participant_id}}", "wishlist"]
            },
            "description": "Get wishlist for a registered user using Bearer token authentication. Returns wishlist with auto-linked URLs and edit permissions info."
          }
        },
        {
          "name": "Get Participant Wishlist (Unregistered User)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/participants/{{participant_id}}/wishlist?token={{participant_token}}",
              "host": ["{{base_url}}"],
              "path": ["api", "participants", "{{participant_id}}", "wishlist"],
              "query": [
                {
                  "key": "token",
                  "value": "{{participant_token}}"
                }
              ]
            },
            "description": "Get wishlist for an unregistered user using participant token in query parameter. Returns wishlist with auto-linked URLs and edit permissions info."
          }
        },
        {
          "name": "Delete Participant Wishlist (Registered User)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/participants/{{participant_id}}/wishlist",
              "host": ["{{base_url}}"],
              "path": ["api", "participants", "{{participant_id}}", "wishlist"]
            },
            "description": "Delete wishlist for a registered user using Bearer token authentication. Can only be deleted before the group end date."
          }
        },
        {
          "name": "Delete Participant Wishlist (Unregistered User)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/participants/{{participant_id}}/wishlist?token={{participant_token}}",
              "host": ["{{base_url}}"],
              "path": ["api", "participants", "{{participant_id}}", "wishlist"],
              "query": [
                {
                  "key": "token",
                  "value": "{{participant_token}}"
                }
              ]
            },
            "description": "Delete wishlist for an unregistered user using participant token in query parameter. Can only be deleted before the group end date."
          }
        }
      ]
    },
    {
      "name": "Exclusion Rules",
      "item": [
        {
          "name": "List Group Exclusions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/groups/{{group_id}}/exclusions",
              "host": ["{{base_url}}"],
              "path": ["api", "groups", "{{group_id}}", "exclusions"]
            }
          }
        },
        {
          "name": "Add Exclusion Rule",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"blocker_participant_id\": 1,\n  \"blocked_participant_id\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/groups/{{group_id}}/exclusions",
              "host": ["{{base_url}}"],
              "path": ["api", "groups", "{{group_id}}", "exclusions"]
            },
            "description": "Create exclusion rule where participant 1 cannot give to participant 2"
          }
        }
      ]
    },
    {
      "name": "Draw Operations",
      "item": [
        {
          "name": "Execute Secret Santa Draw",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/groups/{{group_id}}/draw",
              "host": ["{{base_url}}"],
              "path": ["api", "groups", "{{group_id}}", "draw"]
            },
            "description": "Execute the Secret Santa draw. Requires at least 3 participants."
          }
        }
      ]
    },
    {
      "name": "Result Operations",
      "item": [
        {
          "name": "Get Draw Result (Authenticated)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/groups/{{group_id}}/result",
              "host": ["{{base_url}}"],
              "path": ["api", "groups", "{{group_id}}", "result"]
            },
            "description": "Get the Secret Santa draw result for the authenticated user. Requires the user to be a participant in the group and the draw to be completed."
          }
        },
        {
          "name": "Get Draw Result (Token-based)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/results/{{access_token}}",
              "host": ["{{base_url}}"],
              "path": ["api", "results", "{{access_token}}"]
            },
            "description": "Get the Secret Santa draw result using an access token. No authentication required - uses token for authorization. The draw must be completed."
          }
        }
      ]
    },
    {
      "name": "Test Endpoints",
      "item": [
        {
          "name": "Test GET",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/test",
              "host": ["{{base_url}}"],
              "path": ["api", "test"]
            }
          }
        },
        {
          "name": "Test POST",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"Test data\",\n  \"timestamp\": \"{{timestamp}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/test",
              "host": ["{{base_url}}"],
              "path": ["api", "test"]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:4321",
      "type": "string",
      "description": "Base URL for the API"
    },
    {
      "key": "group_id",
      "value": "1",
      "type": "string",
      "description": "ID of the group (set this after creating a group)"
    },
    {
      "key": "participant_id",
      "value": "1",
      "type": "string",
      "description": "ID of the participant (set this after adding a participant)"
    },
    {
      "key": "participant_token",
      "value": "",
      "type": "string",
      "description": "Access token for unregistered participants (returned when adding participant to group)"
    },
    {
      "key": "access_token",
      "value": "your-access-token-here",
      "type": "string",
      "description": "Access token for unregistered participants (set this after adding a participant)"
    },
    {
      "key": "timestamp",
      "value": "{{$timestamp}}",
      "type": "string",
      "description": "Current timestamp"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-generate timestamp for test requests",
          "pm.globals.set(\"timestamp\", new Date().toISOString());"
        ]
      }
    }
  ]
}
